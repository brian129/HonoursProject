<!DOCTYPE html>
<html lang="en">
	<head>
		<% include partials/head %>
	</head>

	<body>
		<% include partials/menu %>
		<section id="productDisplay" class="container mx-auto my-2">
			<div class="card mx-auto">
				<div
					class="card-body d-flex flex-column justify-content-center  align-items-center"
				>
					<%if (subItem != null) { %>
					<h1>
						Price history for item: <%=product%>,</h1>
						<h1>
						subitem: <%=subItem%>
					</h1>
					<%} else {%>
					<h1>
						Price history: <%=product%>
					</h1>
					<%}%>
					<div
						id="wrapper"
						class="chart-container"
						style="height: 60vh; min-width:400px; width: 100%"
					>
						<canvas id="myChart" aria-label="<%=product%>">
							<p>Error</p>
						</canvas>
						<div id="colourLegend" class="col-6"></div>
					</div>
					<div class="row vh-50">
						<div class="col-12">
							<div class="row text-center">
								<div class="col-lg-6">
									<div class="card border-primary">
										<div class="card-body d-flex flex-column align-items-start">
											<ul style="list-style-type:square;">
												<li style="color:rgba(0,192,0,1);font-size:30px">
													<span style="color:black;font-size:16px">New</span>
												</li>
												<li style="color: rgba(0,32,255,1);font-size:30px">
													<span style="color:black;font-size:16px"
														>Used / Like New / Very Good / Good / Acceptable</span
													>
												</li>
												<li style="color: rgba(160,128,96,1);font-size:30px">
													<span style="color:black;font-size:16px">Refurbished</span>
												</li>
												<li style="color: rgba(255,0,0,1);font-size:30px">
													<span style="color:black;font-size:16px">Faulty</span>
												</li>
											</ul>
										</div>
									</div>
								</div>
								<div class="col-lg-6">
									<div class="card border-primary align-items-start pl-5">								
										<p><span style="color:black;font-size:60px">&#46;</span>&emsp;&emsp;Item Sold</p>									
										<p><span style="color:black;font-size:25px">&#215;</span>&emsp;&emsp;Item Unsold</p>
									</div>
								</div>
							</div>
						</div>				
				</div>
			</div>
		</section>
	</body>
	<script src="/javascripts/require.js" type="text/javascript"></script>
	<script>
			requirejs.config({
				paths: {
					jquery: "//ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min",
					moment: "//cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment",
					chartjs: "//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart"
				}
			});

			define("moment-adapter", ["moment"], function(moment) {
				// Set the global.
				window.moment = moment;
				return moment;
			});

			require(["jquery", "moment-adapter", "chartjs"], function(
				$,
				moment,
				Chart
			) {
				var list = <%-JSON.stringify(list)%>;
				var format = [];
				var date = [];
				var time = [];
				var sold = [];
				var price = [];
				var conditionName = [];
				var comments = [];
				var Name = [];
				var subItem = [];
				for (var g in list) {
					if(list[g].BuyingFormat == "buyitnow" || list[g].BuyingFormat == "buyItNow"){
						format.push("Buy It Now");
					} else if(list[g].BuyingFormat == "auction"){
						format.push("Auction");
					}
					date.push(moment(list[g].DateEnded).format('ll'));
					time.push(list[g].TimeEnded);
					if(list[g].SoldStatus === 1){
						sold.push("Sold");
					}else{
						sold.push("Unsold");
					};
					price.push(list[g].Price);
					conditionName.push(list[g].ConditionName);
					comments.push(list[g].Comments);
					Name.push(list[g].Name);
					subItem.push(list[g].SubItem);
				}
				//determine colour for each entry, from Ben Gardner https://stackoverflow.com/questions/35633618/chart-js-bar-chart-color-change-based-on-value
				var colours = []
				for(var i = 0; i < conditionName.length; i++){
					var color;
					switch(conditionName[i]){
						case "New":
						//green
							color = "rgba(0,192,0,1)";
							break;
						case "Used":
						//blue
							color = "rgba(0,32,255,1)";
							break;
						case "Like New":
						//blue
							color = "rgba(0,32,255,1)";
							break;
						case "Very Good":
						//blue
							color = "rgba(0,32,255,1)";
							break;
						case "Good":
						//blue
							color = "rgba(0,32,255,1)";
							break;
						case "Acceptable":
						//blue
							color = "rgba(0,32,255,1)";
							break;
						case "Refurbished":
						//brown
							color = "rgba(160,128,96,1)";
							break;
						case "Faulty":
						//red
							color = "rgba(255,0,0,1)";
							break;
						default:
							color = "yellow"
					}
					colours[i] = color;
				}

				//determine point shape for each entry
				var style = []
				for(var i = 0; i < sold.length; i++){
					var temp;
					switch(sold[i]){
						case "Sold":
						//sold
							temp = "circle";
							break;
						case "Unsold":
						//blue
							temp = "crossRot";
							break;
					}
					style[i] = temp;
				}
				var ctx = document.getElementById("myChart").getContext("2d");
				var myChart = new Chart(ctx, {
					type: "line",
					data: {
						labels: date,
						datasets: [
							{
							label: "Price Recorded(£)",
							fill: false,
							data: price,
							pointSize: 100,
							pointBackgroundColor: colours,
							pointBorderColor: colours,
							pointRadius: 10,
							pointHoverRadius: 15,
							pointStyle: style,
							linetension: 1
							}
						]
					},
					options: {
						scales: {
							xAxes: [
								{
									type: "time",
									time:{
										unit: 'week',
										displayFormats: {
                                        week: 'DD MMM'
                                    }

									},
									distribution: "linear",
									bounds: 'data',
									ticks:{
										source: 'data',
										minRotation: 45,
									},
									scaleLabel: {
										display: true,
										labelString: 'Date'
									},
								}
							]
						},

						legend: {
							display: true,
						},
						layout:{
							padding:{
								top:25,
								bottom:25,
								left: 25,
								right:25
							}
						},
						responsive: true,
						maintainAspectRatio: false,
						hover: {
							mode: "index",
							intersect: true
						},
						tooltips: {
							enabled: true,
							mode: "nearest",
							displayColors: false,
							//callback method referenced from Horken on https://stackoverflow.com/questions/40991270/custom-label-from-using-separate-array-in-chart-js
							callbacks: {
								label: function(tooltipItems, data) {
									var timeTooltip = "Time: " + time[tooltipItems.index];
									var formatTooltip = "Buying Format: " + format[tooltipItems.index];
									var conditionTooltip = "Condition: " + conditionName[tooltipItems.index];
									var commentTootip = "Comments: " + comments[tooltipItems.index];
									var priceTooltip = "Price: £" + tooltipItems.yLabel;
									  if(sold[tooltipItems.index] === "Unsold"){
										var tooltip = ["UNSOLD", priceTooltip,timeTooltip,formatTooltip,conditionTooltip,commentTootip]; //storing all the value here
										return tooltip; //return Array back to function to show out
									}else{
										var tooltip = [priceTooltip,timeTooltip,formatTooltip,conditionTooltip,commentTootip]; //storing all the value here
										return tooltip;
									}
								}
							}
							}
						}
					}
				);

		});
	</script>
	<% include partials/script %>
</html>
